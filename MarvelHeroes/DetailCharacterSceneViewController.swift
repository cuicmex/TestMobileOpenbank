//
//  DetailCharacterSceneViewController.swift
//  MarvelHeroes
//
//  Created by Humberto C Trujano Chavez on 1/2/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SafariServices

protocol DetailCharacterSceneDisplayLogic: AnyObject{
}

class DetailCharacterSceneViewController: UIViewController, DetailCharacterSceneDisplayLogic, UITableViewDelegate, UITableViewDataSource, SFSafariViewControllerDelegate
{
    @IBOutlet weak var imgViewCharacter: UIImageView!
    @IBOutlet weak var lblName: UILabel!
    @IBOutlet weak var lblDescriptionCharacter: UILabel!
    @IBOutlet weak var tblViewUrls: UITableView!

    var urlsWebContent: [UrlExtraInfoCharacterModel]!
    
    var interactor: DetailCharacterSceneBusinessLogic?
    var router: (NSObjectProtocol & DetailCharacterSceneRoutingLogic & DetailCharacterSceneDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = DetailCharacterSceneInteractor()
        let presenter = DetailCharacterScenePresenter()
        let router = DetailCharacterSceneRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        
        self.tblViewUrls.delegate = self
        self.tblViewUrls.dataSource = self
        self.tblViewUrls.bounces = false

        setInitialUIValues()
    }

    // MARK: Initial
    
    func setInitialUIValues(){
        
        if let detatailInfo = self.router!.dataStore!.detailCharacterInfo {
                        
            self.lblName.text = detatailInfo.name
            self.lblDescriptionCharacter.text = detatailInfo.characterDescription
            
            let imgUrlStr = detatailInfo.image.detailPath
            if let url = URL(string: imgUrlStr) {
                            
                self.imgViewCharacter.sd_setImage(with: url) { img, error, cacheType, url in
                    if error != nil {
                        self.imgViewCharacter?.image=nil
                    }
                }
            }

            urlsWebContent = detatailInfo.urlsExtras
        }
    }

    // MARK: Do DetailCharacterSceneDisplayLogic
    
}

extension DetailCharacterSceneViewController {
     
    // MARK: - UITableViewDataSource, UITableViewDelegate
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }

    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return urlsWebContent.count
    }
            
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell = tableView.dequeueReusableCell(withIdentifier: "urlsWebContentCell", for: indexPath as IndexPath)
        
        let infoUrl = urlsWebContent[indexPath.row]
        cell.textLabel?.text = infoUrl.type.uppercased()
        cell.textLabel?.textColor = UIColor.white
        
        return cell
    }

    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        
        self.tblViewUrls.deselectRow(at: indexPath, animated: true)
        
        if indexPath.row >= 0 && indexPath.row < self.urlsWebContent.count {
            let urlStr = self.urlsWebContent[indexPath.row].urlStr
            router?.routeToSafariVC(urlStr: urlStr)
        }
    }
    
    // MARK: SFSafariViewControllerDelegate
    
    func safariViewControllerDidFinish(_ controller: SFSafariViewController) {
        controller.dismiss(animated: true, completion: nil)
    }
}
